"""
Django settings for frontendapp project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-y$$!ng$^t9u0pm+ai8roslrjk61bc&7$nh5*@)2*b%*+7i$(u-"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost:8000"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "pii_shield",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "pii_shield.middleware.PIIShieldMiddleware",
]

ROOT_URLCONF = "frontendapp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "frontendapp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# PII Shield configuration
PII_SHIELD = {
    "MODE": "frontend",
    # Redis connection settings
    "REDIS": {
        "host": "localhost",
        "port": 6379,
        "password": "pii_redis_pass",
        "ssl": False,
        "db": 0,
        "socket_timeout": 5,
        "socket_connect_timeout": 5,
        "retry_on_timeout": True,
        "health_check_interval": 30,
    },
    # Data expiration settings
    "SESSION": {
        "timeout": 1800,  # 30 minutes
        "refresh_threshold": 300,  # 5 minutes
        "cleanup_interval": 900,  # 15 minutes
    },
    # Redis channels
    "CHANNELS": {
        "prefix": "pii_shield",
        "default": "default",
    },
    # Synchronization settings
    "SYNC": {
        "batch_size": 100,
        "max_retries": 3,
        "retry_delay": 1,  # seconds
        "backoff_factor": 2,
        "request_timeout": 5,  # seconds
    },
    # Logging configuration
    "LOGGING": {
        "enabled": True,
        "level": "INFO",
        "file": None,  # None means use Django's logging
    },
    # Security settings
    "SECURITY": {
        "token_header": "Authorization",
        "token_prefix": "Token",
        "rate_limit": {
            "enabled": True,
            "rate": "60/minute",
        },
    },
    # Advanced options
    "ADVANCED": {
        "waiting_view": "pii_shield:waiting_for_sync",
        "redirect_session_key": "redirect_after_sync",
        "auto_reconnect": True,
    },
}
